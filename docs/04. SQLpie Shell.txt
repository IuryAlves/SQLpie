==============================================================
SQLpie License (MIT License)
Copyright (c) 2011-2016 Andr√© Lessa, http://sqlpie.com
See LICENSE file.
==============================================================


== Launching the SQLpie shell utility.

    1. First make sure the SQLpie Server is already running.
    2. Then, run the command below.
    
    $ python scripts/shell.py

    Internally, the shell uses the SQLpie client, and tries to connect to the localserver.
    The default port is the one defined in the options configuration file (i.e. the server.port option).
    
    To launch the shell so it connects to a different server, you can use a few additional parameters.
    
    --protocol
    --hostname
    --port
    
    e.g.
    
    python scripts/shell.py  --protocol https  --hostname somethingelse.db  --port 9929


== Using the shell commands

    After launching the SQLpie Shell, you can interact with the shell in the following ways:
    
    1. To show a list of available commands.

        SQLpie #  help

    2. To show all the available help for a specific command, type help <API ENDPOINT>. e.g.

        SQLpie #  help /ping

    3. To exit to the operating system, stopping all threads.
    
        SQLpie #  exit
    
    4. To load the contents of a Tab-Separated-Values (TSV) file into a storage bucket, as individual documents.        
    Type load <bucket> <filename>. e.g.
    
        SQLpie #  load employees /home/testuser/employees.tsv
    
    5. To export results (stored in variable) into a local text file.
    Type export <variable> <filename>. e.g.
    
        SQLpie #  export x /home/testuser/new-employees.tsv
    
    6. To assign a value to a variable.
    Type <variable> = <json_object>. e.g.
    
        SQLpie #  x = {"documents":{"_id":"001", "_bucket":"employees","name":"John","location":"Pittsburgh, PA","title":"CEO"}}
        
        or, 
    
        SQLpie #  x = _
            
        _ is a special variable that contains the response from the latest executed API command.
    
    7. In addition you can send requests to all API ENDPOINTS.
    To do that, you just need to type the API ENDPOINT and the JSON object. e.g.
    
        SQLpie #  /document/put {"documents":{"_id":"001", "_bucket":"employees","name":"John","location":"Pittsburgh, PA","title":"CEO"}}
